name: Unit-Test
on: [ pull_request,push ]

jobs:
    unit-test:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ ubuntu-latest, macos-latest, windows-latest ]
                python-version: [ '3.9', '3.10', '3.11', '3.12' ]

        steps:
            -   uses: actions/checkout@v3

            -   name: Install Python
                uses: actions/setup-python@v4
                with:
                    python-version: ${{ matrix.python-version }}

            -   name: Install poetry
                uses: abatilo/actions-poetry@v2
            -   name: Setup a local virtual environment (if no poetry.toml file)
                run: |
                    poetry config virtualenvs.create true --local
                    poetry config virtualenvs.in-project true --local
            -   uses: actions/cache@v3
                name: Define a cache for the virtual environment based on the dependencies lock file
                with:
                    path: ./.venv
                    key: venv-${{ hashFiles('poetry.lock') }}
            -   name: Install the project dependencies
                run: poetry install
            -   name: Run the automated tests (for example)
                run: poetry run pytest
        continue-on-error: true

